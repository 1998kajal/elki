<?xml version="1.0"?>

<project name="KDDFramework" default="complete" basedir=".">
	<tstamp>
		<format property="now" pattern="yyyy-MM-dd_HHmm" />
	</tstamp>

	<property name="classpath" value="classesBuild" />
	<property name="build.lib" value="lib"/>
	<property name="buildpath" value="build" />
	<property name="jarFile" value="elki.jar" />
	<property name="main-class" value="de.lmu.ifi.dbs.elki.KDDTask" />
	<property name="source" value="src" />
	
	<condition property="windows.disk.prefix" value="P:">
		<or>
			<equals arg1="${user.name}" arg2="achtert" />
			<equals arg1="${user.name}" arg2="schumm" />
			<equals arg1="${user.name}" arg2="wanka" />
			<and>
				<or>
					<equals arg1="${user.name}" arg2="kroegerp" />
					<equals arg1="${user.name}" arg2="zimek" />
				</or>
				<equals arg1="${os.name}" arg2="Windows XP" />
			</and>
		</or>
	</condition>
	<condition property="windows.disk.prefix" value="D:">
		<equals arg1="${user.name}" arg2="Steffi" />
	</condition>
	<condition property="windows.disk.prefix" value="">
		<not>
			<isset property="${windows.disk.prefix}" />
		</not>
	</condition>

	<condition property="javadoc.destdir" value="/KDD/doc">
		<equals arg1="${user.name}" arg2="Steffi" />
	</condition>
	<condition property="javadoc.destdir" value="/nfs/infdbs/WissProj/KDD-Framework/doc">
		<not>
			<isset property="${javadoc.destdir}" />
		</not>
	</condition>

	<condition property="deploy.archive" value="/KDD/archive/">
		<equals arg1="${user.name}" arg2="Steffi" />
	</condition>
	<condition property="deploy.archive" value="/nfs/infdbs/WissProj/KDD-Framework/archive/">
		<not>
			<isset property="${deploy.archive}" />
		</not>
	</condition>

	<condition property="deploy.executable" value="/KDD/executable">
		<equals arg1="${user.name}" arg2="Steffi" />
	</condition>
	<condition property="deploy.executable" value="/nfs/infdbs/WissProj/KDD-Framework/executable">
		<not>
			<isset property="${deploy.executable}" />
		</not>
	</condition>
	
	<path id="compileClasspath">
		<fileset dir="${build.lib}">
			<include name="**/*.jar"/>
		</fileset>
		<dirset dir="${source}" />
	</path>
	
	<target name="complete" description="creates javadoc and builds the project" depends="javadoc,build" />

	<target name="javadoc">
		<javadoc destdir="${windows.disk.prefix}${javadoc.destdir}"
			access="private"
			use="true"
			notree="false"
			nonavbar="false" noindex="false" splitindex="true"
			author="true" version="true" nodeprecatedlist="false"
			nodeprecated="false" link="http://java.sun.com/javase/6/docs/api/"
			overview="src/overview.html" sourcepath="src"
			doctitle="ELKI (internal version)" windowtitle="ELKI (internal version)">
			<classpath refid="compileClasspath"/>
			<packageset dir="src"/>
			<footer>
                &lt;table style="font-size:xx-small;"&gt;
                &lt;tr&gt;
                &lt;td colspan="2" align="left"&gt;
                Documentation created
                &lt;/td&gt;
                &lt;/tr&gt;

                &lt;tr&gt;
                &lt;td align="left"&gt;
                at
                &lt;/td&gt;
                &lt;td align="right"&gt;
                ${now}
                &lt;/td&gt;
                &lt;/tr&gt;

                &lt;tr&gt;
                &lt;td align="left"&gt;
                by
                &lt;/td&gt;
                &lt;td align="right"&gt;
                ${user.name}
                &lt;/td&gt;
                &lt;/tr&gt;
                &lt;/table&gt;
            </footer>
			<header>ELKI (internal version)</header>
		</javadoc>
		<copy todir="${windows.disk.prefix}${javadoc.destdir}">
			<fileset dir="${source}">
				<include name="parameters*.html"/>
			</fileset>
		</copy>
	</target>


	<target name="build" description="build project" depends="init,recompile,copy4jar,createjar,copy,delete_inproject" />

	<target name="init" description="initial conditions">		
		<property name="deploy" value="${windows.disk.prefix}${deploy.archive}version-${now}" />
		<property name="executable" value="${windows.disk.prefix}${deploy.executable}" />		
		<delete file="${jarFile}" />
		<delete dir="${buildpath}" />
		<delete dir="${classpath}" />
	</target>

	<target name="recompile" description="cleaning up classpath, recompiling all classes" depends="init">
		<delete dir="${classpath}" />
		<mkdir dir="${classpath}" />
		

		<javac destdir="${classpath}" deprecation="false" debug="false" optimize="true" source="1.6" debuglevel="">
			<!--<compilerarg value="-Xlint:all"/>-->
			<classpath refid="compileClasspath" />
			<exclude name="*.xml" />
			<exclude name="*.html" />
			<exclude name="*.jar" />
			<exclude name="*.xsd" />
			<exclude name="**/zelki/**" />
			<exclude name="**/test/**"/>
			<!--<exclude name="**/experimentalcode/noemi/**"/>-->
			<exclude name="**/experimentalcode/tobias/**"/>
			<exclude name="**/experimentalcode/simon/tests/**"/>
			<src path="${source}" />
		</javac>
	</target>

	<target name="copy4jar" description="copies all classes and descriptors together" depends="recompile">
		<copy todir="${buildpath}">
			<fileset dir="bin">
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${classpath}" />
		</copy>
		<unjar dest="${buildpath}" src="${build.lib}/batik-all-1.7.jar"/>
		<unjar dest="${buildpath}" src="${build.lib}/junit-4.5.jar"/>
		<unjar dest="${buildpath}" src="${build.lib}/pdf-transcoder.jar"/>
		<unjar dest="${buildpath}" src="${build.lib}/xml-commons-external-1.3.04.jar"/>
		<copy todir="${buildpath}">
			<fileset dir="${source}">
				<exclude name="**/*.java" />
				<exclude name="**/*.html"/>
				<exclude name="**/*.txt"/>
			</fileset>
		</copy>
		<copy todir="${buildpath}/src">
			<fileset dir="${source}">
				<exclude name="**/*.html"/>
			</fileset>
		</copy>
		<!-- insert patterns to exclude certain classes from deployment -->
		<delete>
			<fileset dir="${buildpath}">
				<include name="**/zelki/**" />
				<include name="**/*.html"/>
				<include name="**/*.txt"/>
			</fileset>
		</delete>
	</target>

	<target name="createjar" description="creates jar file in base dir" depends="init, copy4jar">
		<jar basedir="${buildpath}/" jarfile="${jarFile}">
			<manifest>
				<attribute name="Main-class" value="${main-class}" />
			</manifest>
		</jar>
	</target>

	<target name="copy" description="copies the executable jar file to archive and executable directory" depends="init, createjar">
		<mkdir dir="${deploy}"/>
		<copy todir="${deploy}">
			<fileset file="${jarFile}" />
		</copy>
		<copy todir="${executable}">
			<fileset file="${jarFile}" />
		</copy>
	</target>

	<target name="delete_inproject" description="deletes temporary paths and jar file in project path" depends="init">
		<delete file="${jarFile}" />
		<delete dir="${buildpath}" />
		<delete dir="${classpath}" />
	</target>

	<!--
    <target name="copy non-java-stuff" description="get all non-java-stuff from archive" depends="">
        <copy todir="bin">
            <fileset dir="/home/wiss/zimek/work/ML/ENDs/archive/open-version">
                <exclude name="**/*.class"/>
                <exclude name="**/*.tmp"/>
                <exclude name="**/*.jar"/>
                <exclude name="**/*.props"/>
                <exclude name="src/**/*"/>
                <exclude name="META*/**/*"/>
            </fileset>
        </copy>
    </target>
     -->

</project>